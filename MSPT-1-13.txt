MSPT-1: Да, така смятам. Когато си създадем локално хранилище, то не кореспондира със сървърното докато, локалното не е push-нато,
за да бъде създадено сървърно хранилище.
 
MSPT-2: Използваме git add . Добавя всички промени в директорията, а с git commit -m "", комитваме промените на локалното хранилище
като след -m се пише съобщение с направените промени.

MSPT-3: Branch е начи за създаване на нова директория, като на master branch се поставят основите на проекта, а чрез branching,
правим промени върху файловете от основната директория (branch), без да им вредим.

MSPT-4: Да, тъй като бранч е вид директория.

MSPT-5: Чрез git pull един вид дръпваме промените, които са направени върху сървърното хранилище, за да се отразят и на локалното,
а git push, използваме за да качим нашите промени от локалното, към сървърното хранилище.

MSPT-6:  

MSPt-7: Няма да има промени, ако не са мокитнати и пушнати на сървърното хранилище, няма да са запазени, на сървърното хранилище
ще бъдат запазени само последните комитнати и пушнати промени.(сървърното хранилище няма да се изтрие, ако локалното бъде);

MSPT-8: Централизиране не е толкова и гъвкава и отнима доста време разработчиците да синхронизират всички файлове, на всяка машина,
докато децантрализираната използва архитектура Peer-to-Peer, което дава възможност да се синхронизират файловете и промените,
на всички машини, чрез сървърно хранилище.

MSPT-9: Не, най-простото заради разликата в архитектурата, централизиранта ползва архитектура Client Server,която е локално базирана,
а децантрализиранта е с архитектура Peer-To-Peer, която сървърно базирана.

MSPT-10: Ако имаме достъп до сървърното, чрез платформата GitHub, да можем да правим промени на сървърното хранилище, дори и да не се
го клонирали на локално такова. Промените стават достъпни за всички, веднага яом сме ги направили, чрез GitHub,но ако са направени на
локално хранилище, ще трябва да изпълним командите git add . git commit -m "" git push.

MSPT-11: Git е програма/модул с която по-лесно се менажира работата на един софтуерен проект, чрез сървърно хранилище, а GitHub
e способ/инструбмент с удобен UI за да улесни работата с Git.

MSPT-12: Pull request се използва за качване на промени и мърджване на бранч 1 с мастър бранч, като преди това, промените трябва да
бъбдет удобрени от член на екипа, за да няма перманентни повреди по мастър бранч и цялостния проект;

MSPT-13: Програма/модул която цели да даде възможност на сътрудниците да следят процеса на работа и мениджмънта.
